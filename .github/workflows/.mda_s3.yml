name: Send MDA to S3

on: 
  push:
    branches:
      - main
      - master
      - acceptance
jobs:
  SetupEnvironment:
    runs-on: ubuntu-latest
    
    steps:
      - name: SetupMinioS3
        run: |
          echo "Setting up Minio S3"
          git clone -b master https://github.com/josevaldojnr/OnPremisesApp.git
          cd ~/work/OnPremisesApp
          python upload_to_s3.py
        env:
          MINIO_HOST: "dda9-2803-9810-4789-f910-5053-31bf-ce62-445f.ngrok-free.app"
          MINIO_PORT: "443"
          ACCESS_KEY: "LtJeM4dfwVxTQMW9aWCB"
          SECRET_KEY: "Is2mlxK6LNSCyGLoDUGW7vYPTu3idgQQKWuMTmke"

      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: clone mx_buildpack repo
        uses: actions/checkout@v2
        with:
          repository: 'mendix/docker-mendix-buildpack.git'
          ref: 'latest'
      - name: Setup builders
        run: |
          docker build -t mendix-rootfs:app -f rootfs-app.dockerfile .
          docker build -t mendix-rootfs:builder -f rootfs-builder.dockerfile .
          git clone -b master https://github.com/josevaldojnr/OnPremisesApp.git
          python build.py --destination tmp/image --source OnPremisesApp/OnPremisesApp.mpr build-mda-dir
          docker build --tag on_premises_app:latest tmp/image
          docker save on_premises_app:latest > ~/work/on_premises_app.tar
          python Onpremisesupload_to_s3.py
          
          